@using BudgetTracker.BudgetSquirrel.Application
@using BudgetTracker.BudgetSquirrel.Web.Pages
@using BudgetTracker.BudgetSquirrel.Web.ViewComponents
@using BudgetTracker.Business.Budgeting

@model BudgetViewModel

<div class="budget-item" data-status="@Html.Raw((int) Model.StatusSummary)">
    <h3>
        @Model.Budget.Name
    </h3>
    <div class="budget-item__summary">
        <div class="budget-item__inline-detail">
            @string.Format("{0:C}", Model.Budget.SetAmount)
            Budgeted
        </div>
        <div class="budget-item__inline-detail">
            @string.Format("{0:C}", Model.FundBalance)
            Available to Spend
        </div>
    </div>
    <div class="budget-item__details">
        <div class="budget-item__inline-detail">
            <p class="budget-item__label">Start of Period:</p>
            <p>@string.Format("{0:C}", Model.StartBalance)</p>
        </div>
        <div class="budget-item__inline-detail">
            <p class="budget-item__label">Earnings:</p>
            <p>@string.Format("{0:C}", Model.AmountIn)</p>
        </div>
        <div class="budget-item__inline-detail">
            <p class="budget-item__label">Expenses:</p>
            <p>@string.Format("{0:C}", Model.AmountOut)</p>
        </div>
    </div>
    <div class="transaction-form">
        <form method="post" asp-page="/@LogTransactionModel.PageName">
            <p>
                <label for="VendorName">Vendor:</label>
                <input type="text" name="VendorName" placeholder="(Store Name)" />
            </p>
            <p>
                <label for="Amount">Amount:</label>
                <input type="number" step="0.01" name="Amount" />
            </p>
            <p>
                <label for="DateOfTransaction">Date of Transaction:</label>
                <input type="date" name="DateOfTransaction" placeholder="02/27/2019" />
            </p>
            <p>
                <label for="CheckNumber">Check Number:</label>
                <input type="text" name="CheckNumber" placeholder="1069" />
            </p>
            <p>
                <label for="Notes">Notes:</label>
                <input type="text" name="Notes" />
            </p>
            <p>
                <label for="Notes">Description:</label>
                <textarea name="Description"></textarea>
            </p>
            <div class="hidden">
                <input name="BudgetId" value="@Model.Budget.Id" />
            </div>
            <button type="submit">Save</button>
        </form>
    </div>
</div>
<div class="budget-container">
    @foreach (Budget subBudget in @Model.Budget.SubBudgets)
    {
        @await Component.InvokeAsync(BudgetViewComponent.ComponentName,
            new { budget = Model.GetSubBudgetViewModel(subBudget.Id) });
    }
</div>
