@using BudgetTracker.BudgetSquirrel.Application
@using BudgetTracker.BudgetSquirrel.Web.Pages
@using BudgetTracker.BudgetSquirrel.Web.ViewComponents
@using BudgetTracker.Business.Budgeting

@model BudgetViewModel

<div class="budget-item"
        data-status="@Html.Raw((int) Model.StatusSummary)"
        data-budget-id="@Model.Budget.Id">
    <div class="budget-item__content">
        <div class="budget-item__expand-toggle" role="button">
            <svg class="budget-item__arrow-collapse hidden" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                <path d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"/>
                <path fill="none" d="M0 0h24v24H0V0z"/>
            </svg>
            <svg class="budget-item__arrow-expand" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                <path d="M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"/>
                <path fill="none" d="M0 0h24v24H0V0z"/>
            </svg>
        </div>
        <div class="budget-item__main">
            <div class="budget-item__header" data-toggle=".budget-item[data-budget-id='@Model.Budget.Id'] .budget-item__details">
                <div class="budget-item__header__inline-detail">
                    @if (Model.StatusSummary == BudgetStatus.Bad)
                    {
                        <svg class="budget-item__status-fill" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                            <path d="M18 16v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-5 0h-2v-2h2v2zm0-4h-2V8h2v4zm-1 10c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2z"/>
                            <path fill="none" d="M0 0h24v24H0V0z"/>
                        </svg>
                    }
                    else if (Model.StatusSummary == BudgetStatus.Warning)
                    {
                        <svg class="budget-item__status-fill" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                            <path d="M0 0h24v24H0z" fill="none"/>
                            <path d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"/>
                        </svg>
                    }

                    <h3>
                        @Model.Budget.Name
                    </h3>
                </div>

                <span class="budget-item__header__inline-detail">
                    @string.Format("{0:C}", Model.FundBalance)
                    Available to Spend
                </span>
            </div>

            <div class="budget-item__details hidden">
                <div class="budget-item__inline-detail">
                    <p class="budget-item__label">Start of Period:</p>
                    <p>@string.Format("{0:C}", Model.StartBalance)</p>
                </div>
                <div class="budget-item__inline-detail">
                    <p class="budget-item__label">Amount Budgeted:</p>
                    <p>@string.Format("{0:C}", Model.Budget.SetAmount)</p>
                </div>
                <div class="budget-item__inline-detail">
                    <p class="budget-item__label">Earnings:</p>
                    <p>@string.Format("{0:C}", Model.AmountIn)</p>
                </div>
                <div class="budget-item__inline-detail">
                    <p class="budget-item__label">Expenses:</p>
                    <p>@string.Format("{0:C}", Model.AmountOut)</p>
                </div>
            </div>

            <div class="budget-item__controls">
                <div role="button" class="btn btn--icon btn--square inline-flex"
                        data-toggle=".budget-item[data-budget-id='@Model.Budget.Id'] .transaction-form"
                        data-toggle-group="transaction-form:@Model.Budget.Id">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M18 17H6v-2h12v2zm0-4H6v-2h12v2zm0-4H6V7h12v2zM3 22l1.5-1.5L6 22l1.5-1.5L9 22l1.5-1.5L12 22l1.5-1.5L15 22l1.5-1.5L18 22l1.5-1.5L21 22V2l-1.5 1.5L18 2l-1.5 1.5L15 2l-1.5 1.5L12 2l-1.5 1.5L9 2 7.5 3.5 6 2 4.5 3.5 3 2v20z"/><path d="M0 0h24v24H0z" fill="none"/>
                    </svg>
                    <span class="btn__tool-tip">
                        Add Transaction
                    </span>
                </div>
                <div role="button" class="btn btn--icon btn--square inline-flex">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                        <path d="M0 0h24v24H0z" fill="none"/>
                        <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
                    </svg>
                    <span class="btn__tool-tip">
                        Add Sub-Budget
                    </span>
                </div>
            </div>
        </div>
    </div>

    <div class="transaction-form hidden">
        <form method="post" asp-page="/@LogTransactionModel.PageName">
            <p>
                <label for="VendorName">Vendor:</label>
                <input type="text" name="VendorName" placeholder="(Store Name)" required />
            </p>
            <p>
                <label for="Amount">Amount:</label>
                <input type="number" step="0.01" name="Amount" required />
            </p>
            <p>
                <label for="DateOfTransaction">Date of Transaction:</label>
                <input type="date" name="DateOfTransaction" placeholder="02/27/2019" required />
            </p>
            <p>
                <label for="CheckNumber">Check Number:</label>
                <input type="text" name="CheckNumber" placeholder="1069" />
            </p>
            <p>
                <label for="Notes">Notes:</label>
                <input type="text" name="Notes" />
            </p>
            <p>
                <label for="Notes">Description:</label>
                <textarea name="Description"></textarea>
            </p>
            <div class="hidden">
                <input name="BudgetId" value="@Model.Budget.Id" />
            </div>
            <button type="submit" class="btn">Save</button>
            <button role="button" type="button" class="btn hidden"
                    data-toggle=".budget-item[data-budget-id='@Model.Budget.Id'] .transaction-form"
                    data-toggle-group="transaction-form:@Model.Budget.Id"
                    data-toggle-off>
                Close
            </button>
        </form>
    </div>
</div>

<div class="budget-container hidden"
    data-budget-id="@Model.Budget.Id">
    @foreach (Budget subBudget in @Model.Budget.SubBudgets)
    {
        @await Component.InvokeAsync(BudgetViewComponent.ComponentName,
            new { budget = Model.GetSubBudgetViewModel(subBudget.Id) });
    }
</div>
